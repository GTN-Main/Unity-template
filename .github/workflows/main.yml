name: Build

on: [push]

jobs:
  buildForAllSupportedPlatforms:
    permissions: write-all
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - name: Cache
        uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - name: Free disk space (android only)
        if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - name: Build project
        uses: game-ci/unity-builder@v4
        id: unity-builder
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          versioning: Tag

      # dev

      - if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        name: Publish artifact (dev only)
        uses: actions/upload-artifact@v4
        id: upload-artifact
        with:
          name: Build-${{ matrix.targetPlatform }}-dev
          path: build/${{ matrix.targetPlatform }}
          overwrite: true
      - if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        name: Send discord webhook (dev only)
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          embed-title: 'New commit build'
          embed-url: ${{ steps.upload-artifact.outputs.artifact-url }}
          embed-description: |
            New buld from the latest commit!
            You can [download and test it](${{ steps.upload-artifact.outputs.artifact-url }}). Build for `${{ matrix.targetPlatform }}`.
          embed-color: 1103120
          embed-thumbnail-url: https://picsum.photos/200
          
      # release
          
      - if: startsWith(github.ref, 'refs/tags/')
        name: Zip build (release only)
        uses: vimtor/action-zip@v1.2
        with:
          files: build/${{ matrix.targetPlatform }}
          dest: Build-${{ matrix.targetPlatform }}.zip
      - if: startsWith(github.ref, 'refs/tags/')
        name: Publish release (release only)
        uses: softprops/action-gh-release@v2
        id: gh-release
        with:
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
          make_latest: true
          files: |
            Build-${{ matrix.targetPlatform }}.zip
      - if: startsWith(github.ref, 'refs/tags/')
        name: Send discord webhook (release only)
        uses: tsickert/discord-webhook@v6.0.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          embed-title: 'New release'
          embed-url: ${{ steps.gh-release.outputs.url }}
          embed-description: |
            Version: `${{ steps.unity-builder.outputs.buildVersion }}`
            You can [download and test it](${{ steps.gh-release.outputs.url }}). Build for `${{ matrix.targetPlatform }}`.
          embed-color: 1103120
          embed-thumbnail-url: https://picsum.photos/200
